{
  "hash": "de212eb8d16d675c21aa6a6dad9076ec",
  "result": {
    "markdown": "---\ntalk-title: \"Forecasting with `{epipredict}`\"\ntalk-short-title: \"{{< meta talk-title >}}\"\ntalk-subtitle: \"\"\nauthor: \"\"\nother-authors: \"\"\nrepo-address: \"cmu-delphi/insightnet-workshop-2024\"\ntalk-date: \"Venue -- dd Somemonth yyyy\"\nformat: revealjs\n---\n\n\n<!-- Set any of the above to \"\" to omit them -->\n\n<!-- Or adjust the formatting in _titleslide.qmd -->\n---\n---\n\n\\DeclareMathOperator*{\\minimize}{minimize}\n\n\n\n\n\n\n\n::: flex\n::: w-20\n\n:::\n::: w-80\n## {{< meta talk-title >}} {background-image=\"gfx/cover-art-1.svg\" background-position=\"bottom\"}\n\n### {{< meta talk-subtitle >}}\n\n<br>\n\n#### {{< meta author >}} \n{{< meta other-authors >}}\n\n{{< meta talk-date >}}\n:::\n:::\n\n\n\n\n\n\n## Outline\n\n1. `{epipredict}`\n\n1. ARX Models\n\n1. Forecasting with Versioned Data\n\n# `{epipredict}` \n\n# ARX Models\n\n## Fit ARX on training set\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Split into train and test (before/after t0_date)\nt0_date <- as.Date('2021-03-01')\ntrain <- ca %>% filter(time_value <= t0_date)\ntest <- ca %>% filter(time_value > t0_date)\n\nh <- 28 \n\nepi_arx <- arx_forecaster(epi_data = train %>% as_epi_df(), \n                          outcome = \"deaths\", \n                          predictors = c(\"cases\", \"deaths\"),\n                          trainer = linear_reg() %>% set_engine(\"lm\"),\n                          args_list = arx_args_list(lags = 0, \n                                                    ahead = h))\nepi_arx\n```\n:::\n\n\n## Extract workflow\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nepi_arx$epi_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nstats::lm(formula = ..y ~ ., data = data)\n\nCoefficients:\n (Intercept)   lag_0_cases  lag_0_deaths  \n     0.08133       0.01030       0.14011  \n```\n:::\n:::\n\n\n\n## Extract prediction\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nepi_arx$predictions\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  geo_value .pred        .pred_distn forecast_date target_date\n  <chr>     <dbl>             <dist> <date>        <date>     \n1 ca        0.368 quantiles(0.37)[2] 2021-03-01    2021-03-29 \n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nepi_arx$predictions %>%\n  # first create a \"nested\" list-column\n  mutate(.pred_distn = nested_quantiles(.pred_distn)) %>%\n  unnest(.pred_distn) # then unnest it\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  geo_value .pred values quantile_levels forecast_date target_date\n  <chr>     <dbl>  <dbl>           <dbl> <date>        <date>     \n1 ca        0.368  0.224            0.05 2021-03-01    2021-03-29 \n2 ca        0.368  0.513            0.95 2021-03-01    2021-03-29 \n```\n:::\n:::\n\n\n## ARX on trailing window\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Specify the forecast dates\nfc_time_values <- seq(\n  from = t0_date,\n  to = tail(ca$time_value, 1) - h,\n  by = \"1 day\"\n)\n\nw <- 200  # trailing window length\n\n# Slide an arx_forecaster with appropriate outcome, predictions, lags, and trailing window\nepi_pred_cv_trailing <- ca %>%\n  epi_slide(\n    ~ arx_forecaster(epi_data = .x,\n                   outcome = \"deaths\", \n                   predictors = c(\"cases\", \"deaths\"), \n                   trainer = linear_reg() %>% set_engine(\"lm\"),\n                   args_list = arx_args_list(lags = 0, ahead = h)\n                   )$predictions %>%\n      pivot_quantiles_wider(.pred_distn),\n  # notice that `before` is not simply equal to w-1. That's because previously, \n  # when considering a window from t to t+w, we had access to y_t, ..., y_{t+w} \n  # and also to x_{t-h}, ..., x_{t+w-h}. (That's because of how we structured \n  # the dataframe after manually lagging x.) So we were \"cheating\" by saying that \n  # the trailing window had length w, as its actual size was w+h! \n  .window_size = (w+h-1), \n  .ref_time_values = fc_time_values,\n  .new_col_name = \"fc\"\n)\n\n# they match exactly\nhead(epi_pred_cv_trailing %>% select(fc))\nhead(test %>% select(pred_trailing_cv, time_value))\n```\n:::\n\n\nThe method fitting on all past data up to the forecasting date can be \nimplemented by changing `before = Inf` in `epi_slide`.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n## Thanks:\n\n\n\n\n\n- The whole [CMU Delphi Team](https://delphi.cmu.edu/about/team/) (across many institutions)\n- Optum/UnitedHealthcare, Change Healthcare.\n- Google, Facebook, Amazon Web Services.\n- Quidel, SafeGraph, Qualtrics.\n- Centers for Disease Control and Prevention.\n- Council of State and Territorial Epidemiologists\n\n\n::: {layout-row=1 fig-align=\"center\"}\n![](gfx/delphi.jpg){height=\"100px\"}\n![](gfx/berkeley.jpg){height=\"100px\"}\n![](gfx/cmu.jpg){height=\"100px\"}\n![](gfx/ubc.jpg){width=\"250px\"}\n![](gfx/stanford.jpg){width=\"250px\"}\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}